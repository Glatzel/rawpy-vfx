name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: main
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  version-check:
    strategy:
      matrix:
        PYTHON_VERSION: ["vfx2024","vfx2025"]
      fail-fast: false
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ github.token }}
      LIBRAW_VERSION:
      RAWPY_VERSION:
    outputs:
      need_build: ${{ steps.check-version.outputs.NEED_BUILD }}
      libraw_version: ${{ steps.check-version.outputs.LIBRAW_VERSION }}
      rawpy_version: ${{ steps.check-version.outputs.RAWPY_VERSION }}
    steps:
      - name: check version
        id: check-version
        continue-on-error: true
        run: |
          Write-Output "::group::LibRaw"
          $libraw_view=gh release -R LibRaw/LibRaw view --json tagName -q .tagName
          "LIBRAW_VERSION=$LIBRAW_VERSION" >> "$env:GITHUB_OUTPUT"
          write-output "LIBRAW_VERSION: $LIBRAW_VERSION"
          Write-Output "::endgroup::"

          Write-Output "::group::Rawpy"
          $RAWPY_VERSION = gh release -R letmaik/rawpy view --json tagName -q .tagName
          $RAWPY_VERSION="$RAWPY_VERSION".replace("v","")
          "RAWPY_VERSION=$RAWPY_VERSION" >> "$env:GITHUB_OUTPUT"
          write-output "RAWPY_VERSION: $RAWPY_VERSION"
          Write-Output "::endgroup::"

          Write-Output "::group::list ${{ matrix.PYTHON_VERSION }} asset"
          $assets= gh release -R Glatzel/rawpy-vfx-platform view ${{ matrix.PYTHON_VERSION }} --json assets -q ".assets.[] | select(.name | test("$RAWPY_VERSION+$LIBRAW_VERSION"))"
          write-output $assets
          Write-Output "::endgroup::"
          
          Write-Output "::group::check new version"
          try{
            $asset=gh release -R Glatzel/rawpy-vfx-platform view ${{ matrix.PYTHON_VERSION }} --json assets -q ".assets.[] | select(.name | test("$RAWPY_VERSION+$LIBRAW_VERSION"))"
          }
          catch{
            echo "NEED_BUILD=true" >> "$env:GITHUB_OUTPUT"
            write-output "New tag named: ${{ matrix.PYTHON_VERSION }}."
            exit 0
          }
          if([string]::IsNullOrWhiteSpace($asset)){
            echo "NEED_BUILD=true" >> "$env:GITHUB_OUTPUT"
            write-output "New version found."
          }
          else{
            echo "NEED_BUILD=false" >> "$env:GITHUB_OUTPUT"
            write-output "No new version found, skip build."
          }
          Write-Output "::endgroup::"

  release:
    needs: version-check
    if: ${{needs.version-check.outputs.need_build=='true'|| github.event_name=='push'||github.event_name=='pull_request' }}
    strategy:
      matrix:
        PYTHON_VERSION: ["vfx2024","vfx2025"]
      fail-fast: false
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false
      
      - name: clone rawpy
        run: git clone https://github.com/letmaik/rawpy.git --depth 1
      
      - name: install vcpkg dependency
        run: |
          vcpkg install zlib libjpeg-turbo[jpeg8] jasper lcms --triplet=x64-windows-static --recurse


      - name: build
        run: |
          $env:CMAKE_PREFIX_PATH = Resolve-Path "./vcpkg_installed/x64-windows-static"
          Set-Location rawpy
          git apply ../numpy_require.patch
          pixi run -e ${{ matrix.PYTHON_VERSION }} python -u setup.py bdist_wheel

      - name: check whl
        run: if(Test-path rawpy/dist/rawpy*.whl){}else{$lastexitcode=1}
      
      - name: rename whl
        run: |
          Rename-Item ./rawpy/dist/*.whl "rawpy-${{needs.version-check.outputs.rawpy_version}}+${{needs.version-check.outputs.libraw_version}}-py3-none-any.whl"
          $whl = Get-ChildItem "./rawpy/dist/*.whl" | Sort-Object -Property Name -Descending | select -first 1

      - name: Release
        if: ${{github.event_name=='workflow_dispatch' || github.event_name=='schedule'}}
        uses: softprops/action-gh-release@v2
        with:
          files: ./rawpy/dist/rawpy-${{needs.version-check.outputs.rawpy_version}}+${{needs.version-check.outputs.libraw_version}}-py3-none-any.whl
          tag_name: ${{ matrix.PYTHON_VERSION }}