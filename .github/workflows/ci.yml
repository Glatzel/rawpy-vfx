name: CI

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    paths-ignore:
      - '*.md'
  push:
    branches: main
    paths-ignore:
     - '*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true
env:
  vfx_platform: vfx2024
jobs:
  version-check:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      has_new_version: ${{ steps.check-version.outputs.has_new_version }}
      libraw_version: ${{ steps.check-version.outputs.LIBRAW_VERSION }}
      rawpy_version: ${{ steps.check-version.outputs.RAWPY_VERSION }}
    steps:
      - name: check version
        id: check-version
        continue-on-error: true
        run: |
          $LIBRAW_VERSION=gh release -R LibRaw/LibRaw view --json tagName -q .tagName
          "LIBRAW_VERSION=$LIBRAW_VERSION" >> "$env:GITHUB_OUTPUT"
          write-output "LIBRAW_VERSION: $LIBRAW_VERSION"

          $RAWPY_VERSION = gh release -R letmaik/rawpy view --json tagName -q .tagName
          $RAWPY_VERSION="$RAWPY_VERSION".replace("v","")
          "RAWPY_VERSION=$RAWPY_VERSION" >> "$env:GITHUB_OUTPUT"
          write-output "RAWPY_VERSION: $RAWPY_VERSION"

          $assets= gh release -R Glatzel/rawpy-vfx view ${{env.vfx_platform}} --json assets -q ".assets.[].name"
          write-output $assets

          if($assets -like "*rawpy-$RAWPY_VERSION+$LIBRAW_VERSION-py3-none-any.whl*"){
            echo "has_new_version=false" >> "$env:GITHUB_OUTPUT"
            write-output "No new version found."
          }
          else{
            echo "has_new_version=true" >> "$env:GITHUB_OUTPUT"
            write-output "New version found."
          }

  release:
    needs: version-check
    if: ${{needs.version-check.outputs.has_new_version=='true'|| github.event_name=='push'||github.event_name=='pull_request' }}
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ github.token }}
      USE_CONDA: 1
      PYTHON_ARCH: 'x86_64'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false

      - name: build
        run: ../scripts/build-rawpy.ps1

      - name: check whl
        run: |
          if(Test-path rawpy/dist/rawpy*.whl){

          }
          else{
            write-error "no whl found."
            $lastexitcode=1
          }

      - name: rename whl
        run: |
          Rename-Item ./rawpy/dist/*.whl "rawpy-${{needs.version-check.outputs.rawpy_version}}+${{needs.version-check.outputs.libraw_version}}-py3-none-any.whl"

      - uses: actions/upload-artifact@v4
        with:
          name: rawpy-${{env.vfx_platform}}
          path: ./rawpy/dist/rawpy-${{needs.version-check.outputs.rawpy_version}}+${{needs.version-check.outputs.libraw_version}}-py3-none-any.whl
          if-no-files-found: error

      - name: Release
        if: ${{github.event_name=='workflow_dispatch' || github.event_name=='schedule'}}
        uses: softprops/action-gh-release@v2
        with:
          files: ./rawpy/dist/rawpy-${{needs.version-check.outputs.rawpy_version}}+${{needs.version-check.outputs.libraw_version}}-py3-none-any.whl
          tag_name: ${{env.vfx_platform}}
